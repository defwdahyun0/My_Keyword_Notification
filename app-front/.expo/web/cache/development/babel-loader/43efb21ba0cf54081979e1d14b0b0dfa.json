{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/dahyun/My_Keyword_Notification/app-front/src/screens/Signup.js\";\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Image, Input, Button } from \"../components\";\nimport { validateEmail, removeWhitespace } from \"../utils/common\";\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: \", \";\\n  padding: 0 20px;\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return theme.background;\n});\nvar ErrorText = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-start;\\n  width: 100%;\\n  height: 20px;\\n  margin-bottom: 10px;\\n  line-height: 20px;\\n  color: \", \";\\n\"])), function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.errorText;\n});\n\nvar Signup = function Signup() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      id = _useState2[0],\n      setId = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordConfirm = _useState8[0],\n      setPasswordConfirm = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorMessage = _useState10[0],\n      setErrorMessage = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      disabled = _useState12[0],\n      setDisabled = _useState12[1];\n\n  var emailRef = useRef();\n  var passwordRef = useRef();\n  var passwordConfirmRef = useRef();\n  var didMountRef = useRef();\n  useEffect(function () {\n    if (didMountRef.current) {\n      var _errorMessage = '';\n\n      if (!id) {\n        _errorMessage = 'Please enter your id.';\n      } else if (!validateEmail(email)) {\n        _errorMessage = 'Please verify your email.';\n      } else if (password.length < 6) {\n        _errorMessage = 'The password must contain 6 characters at least.';\n      } else if (password !== passwordConfirm) {\n        _errorMessage = 'Passwords need to match.';\n      } else {\n        _errorMessage = '';\n      }\n\n      setErrorMessage(_errorMessage);\n    } else {\n      didMountRef.current = true;\n    }\n  }, [id, email, password, passwordConfirm]);\n  useEffect(function () {\n    setDisabled(!(id && email && password && passwordConfirm && !errorMessage));\n  }, [id, email, password, passwordConfirm, errorMessage]);\n\n  var _handleSignupButtonPress = function _handleSignupButtonPress() {};\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    rounded: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"ID\",\n    value: id,\n    onChangeText: function onChangeText(text) {\n      return setId(text);\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      setName(id.trim());\n      emailRef.current.focus();\n    },\n    onBlur: function onBlur() {\n      return setId(id.trim());\n    },\n    placeholder: \"ID\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    ref: emailRef,\n    label: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(removeWhitespace(text));\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordRef.current.focus();\n    },\n    placeholder: \"Email\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    ref: passwordRef,\n    label: \"Password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(removeWhitespace(text));\n    },\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordConfirmRef.current.focus();\n    },\n    placeholder: \"Password\",\n    returnKeyType: \"done\",\n    isPassword: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    ref: passwordConfirmRef,\n    label: \"Password Confirm\",\n    value: passwordConfirm,\n    onChangeText: function onChangeText(text) {\n      return setPasswordConfirm(removeWhitespace(text));\n    },\n    onSubmitEditing: _handleSignupButtonPress,\n    placeholder: \"Password\",\n    returnKeyType: \"done\",\n    isPassword: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), React.createElement(ErrorText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, errorMessage), React.createElement(Button, {\n    title: \"Signup\",\n    onPress: _handleSignupButtonPress,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/dahyun/My_Keyword_Notification/app-front/src/screens/Signup.js"],"names":["React","useState","useRef","useEffect","styled","Image","Input","Button","validateEmail","removeWhitespace","Container","View","theme","background","ErrorText","Text","errorText","Signup","id","setId","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","errorMessage","setErrorMessage","disabled","setDisabled","emailRef","passwordRef","passwordConfirmRef","didMountRef","current","_errorMessage","length","_handleSignupButtonPress","text","setName","trim","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components/native';\nimport { Image, Input, Button } from '../components';\n//import { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { validateEmail, removeWhitespace } from '../utils/common';\n\nconst Container = styled.View`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.background};\n  padding: 0 20px;\n`;\nconst ErrorText = styled.Text`\n  align-items: flex-start;\n  width: 100%;\n  height: 20px;\n  margin-bottom: 10px;\n  line-height: 20px;\n  color: ${({ theme }) => theme.errorText};\n`;\n\n/* 백엔드 완료되면 수정\nconst Signup = () => {\n  ...\n  const _handleSignupButtonPress = async() => {\n    try {\n      const user = await signup({ email, password, name});\n      console.log(user);\n      Alert.alert('Signup Success', user.email);\n    } catch (e) {\n      Alert.alert('Signup Error', e.message);\n    }\n  };\n\n  return (...);\n};\n...\n\n*/\n\nconst Signup = () => {\n  const [id, setId] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [disabled, setDisabled] = useState(true);\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n\n  const didMountRef = useRef(); //useEffect 오류 메시지 처음 화면에서 나타나는 오류 해결, 마운트 되었을 때 useEffect에서 didMountRef에 값 대입하기\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      let _errorMessage = '';\n      if (!id) {\n        _errorMessage = 'Please enter your id.';\n      } else if (!validateEmail(email)) {\n        _errorMessage = 'Please verify your email.';\n      } else if (password.length < 6) {\n        _errorMessage = 'The password must contain 6 characters at least.';\n      } else if (password !== passwordConfirm) {\n        _errorMessage = 'Passwords need to match.';\n      } else {\n        _errorMessage = '';\n      }\n      setErrorMessage(_errorMessage);\n    } else {\n      didMountRef.current = true;\n    }\n  }, [id, email, password, passwordConfirm]);\n\n  useEffect(() => {\n    setDisabled(\n      !(id && email && password && passwordConfirm && !errorMessage)\n    );\n  }, [id, email, password, passwordConfirm, errorMessage]);\n\n  const _handleSignupButtonPress = () => {};\n\n  return (\n    <Container>\n        <Image rounded />\n        <Input\n          label=\"ID\"\n          value={id}\n          onChangeText={text => setId(text)}\n          onSubmitEditing={() => {\n            setName(id.trim());\n            emailRef.current.focus();\n          }}\n          onBlur={() => setId(id.trim())}\n          placeholder=\"ID\"\n          returnKeyType=\"next\"\n        />\n        <Input\n          ref={emailRef}\n          label=\"Email\"\n          value={email}\n          onChangeText={text => setEmail(removeWhitespace(text))}\n          onSubmitEditing={() => passwordRef.current.focus()}\n          placeholder=\"Email\"\n          returnKeyType=\"next\"\n        />\n        <Input\n          ref={passwordRef}\n          label=\"Password\"\n          value={password}\n          onChangeText={text => setPassword(removeWhitespace(text))}\n          onSubmitEditing={() => passwordConfirmRef.current.focus()}\n          placeholder=\"Password\"\n          returnKeyType=\"done\"\n          isPassword\n        />\n        <Input\n          ref={passwordConfirmRef}\n          label=\"Password Confirm\"\n          value={passwordConfirm}\n          onChangeText={text => setPasswordConfirm(removeWhitespace(text))}\n          onSubmitEditing={_handleSignupButtonPress}\n          placeholder=\"Password\"\n          returnKeyType=\"done\"\n          isPassword\n        />\n        <ErrorText>{errorMessage}</ErrorText>\n        <Button\n          title=\"Signup\"\n          onPress={_handleSignupButtonPress}\n          disabled={disabled}\n        />\n      </Container>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}