{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dahyun/My_Keyword_Notification/app-front/app/screens/Login/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { Component } from \"react\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      id: null,\n      pw: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"buttonClick\",\n    value: function buttonClick() {\n      var _this2 = this;\n\n      fetch('http://13.125.132.137:3000/login', {\n        method: \"POST\",\n        headers: {\n          'CONTENT-TYPE': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.state.id,\n          psword: this.state.pw\n        })\n      }).then(function (response) {\n        console.log(response);\n        return response.json();\n      }).then(function (data) {\n        console.log(data.success);\n\n        if (data.success === true) {\n          AsyncStorage.setItem('authInfo', JSON.stringify(data.result));\n\n          _this2.props.navigation.navigate(\"TabStackScreen\");\n        } else {\n          console.log(\"로그인 실패\");\n          Alert.alert(\"아이디 또는 비밀번호를 \\n확인해주세요.\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, \"Keyword\"), React.createElement(View, {\n        style: styles.iconContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"Alarm\"), React.createElement(MaterialCommunityIcons, {\n        name: \"bell-ring\",\n        size: 50,\n        color: \"gold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        onChangeText: function onChangeText(id) {\n          return _this3.setState({\n            id: id\n          });\n        },\n        style: styles.idPw,\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        placeholderTextColor: \"black\",\n        borderColor: \"dodgerblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.pw,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        onChangeText: function onChangeText(pw) {\n          return _this3.setState({\n            pw: pw\n          });\n        },\n        style: styles.idPw,\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        placeholderTextColor: \"black\",\n        secureTextEntry: true,\n        borderColor: \"dodgerblue\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: {\n          marginTop: 20,\n          borderRadius: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return _this3.buttonClick();\n        },\n        underlayColor: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }, \"log in\")))), React.createElement(View, {\n        style: styles.etcTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.etc,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"IDScreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"\\uC544\\uC774\\uB514\\uCC3E\\uAE30\", \" \"), React.createElement(Text, {\n        style: styles.etc,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"PWScreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, \" \", \"| \", \"  \", \"\\uBE44\\uBC00\\uBC88\\uD638\\uCC3E\\uAE30\", \"  \"), React.createElement(Text, {\n        style: styles.etc,\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"SignupScreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, \"| \", \"  \", \"\\uD68C\\uC6D0\\uAC00\\uC785\")));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"dodgerblue\",\n    padding: 8\n  },\n  title: {\n    fontSize: 55,\n    fontWeight: \"900\",\n    textAlign: \"center\",\n    color: \"gold\",\n    marginRight: 10\n  },\n  iconContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingLeft: 90\n  },\n  id: {\n    backgroundColor: \"white\",\n    marginTop: 20,\n    borderRadius: 8\n  },\n  pw: {\n    backgroundColor: \"white\",\n    marginTop: 10,\n    borderRadius: 8\n  },\n  idPw: {\n    height: 45,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    paddingLeft: 15\n  },\n  button: {\n    backgroundColor: \"gold\",\n    padding: 10,\n    borderRadius: 8\n  },\n  buttonTitle: {\n    fontSize: 17,\n    fontWeight: \"bold\",\n    color: \"midnightblue\",\n    textAlign: \"center\"\n  },\n  etcTitle: {\n    flexDirection: \"row\",\n    paddingTop: 20,\n    justifyContent: \"center\"\n  },\n  etc: {\n    color: \"midnightblue\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/dahyun/My_Keyword_Notification/app-front/app/screens/Login/LoginScreen.js"],"names":["React","Component","AsyncStorage","MaterialCommunityIcons","LoginScreen","state","id","pw","fetch","method","headers","body","JSON","stringify","psword","then","response","console","log","json","data","success","setItem","result","props","navigation","navigate","Alert","alert","styles","container","title","iconContainer","setState","idPw","marginTop","borderRadius","buttonClick","button","buttonTitle","etcTitle","etc","StyleSheet","create","flex","justifyContent","backgroundColor","padding","fontSize","fontWeight","textAlign","color","marginRight","flexDirection","alignItems","paddingLeft","height","borderColor","borderWidth","paddingTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableHighlight,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nexport default class LoginScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: null,\r\n      pw: null,\r\n    };\r\n  }\r\n  buttonClick() {\r\n    fetch('http://13.125.132.137:3000/login', {\r\n      method: \"POST\",\r\n      headers: {\r\n        'CONTENT-TYPE': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        id: this.state.id,\r\n        psword: this.state.pw}),\r\n      })\r\n    .then(response=>{\r\n      console.log(response);\r\n      return response.json();\r\n    }).then(data=>{\r\n      console.log(data.success);\r\n\r\n\r\n      if (data.success === true){\r\n        AsyncStorage.setItem('authInfo', JSON.stringify(data.result))\r\n        \r\n        // DB에 존재하는 회원데이터와 일치할 시 로그인 성공\r\n        this.props.navigation.navigate(\"TabStackScreen\");\r\n      }\r\n      else{\r\n        console.log(\"로그인 실패\");\r\n        Alert.alert(\"아이디 또는 비밀번호를 \\n확인해주세요.\");\r\n\r\n      }\r\n    })\r\n  \r\n  }\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.title}>Keyword</Text>\r\n\r\n        <View style={styles.iconContainer}>\r\n          <Text style={styles.title}>Alarm</Text>\r\n          <MaterialCommunityIcons name=\"bell-ring\" size={50} color=\"gold\" />\r\n        </View>\r\n\r\n        <View style={styles.id}>\r\n          <TextInput //여기서 키보드로 입력받은 데이터값 (textinput)을 setstate로 id값에 넣어줬음\r\n            onChangeText={(id) => this.setState({ id })}\r\n            style={styles.idPw}\r\n            placeholder=\"아이디\"\r\n            placeholderTextColor=\"black\"\r\n            borderColor=\"dodgerblue\"\r\n          />\r\n        </View>\r\n        <View style={styles.pw}>\r\n          <TextInput //여기서 키보드로 입력받은 데이터값 (textinput)을 setstate로 pw값에 넣어줬음\r\n            onChangeText={(pw) => this.setState({ pw })}\r\n            style={styles.idPw}\r\n            placeholder=\"비밀번호\"\r\n            placeholderTextColor=\"black\"\r\n            secureTextEntry\r\n            borderColor=\"dodgerblue\"\r\n          />\r\n        </View>\r\n        <View style={{ marginTop: 20, borderRadius: 8 }}>\r\n          <TouchableHighlight\r\n            onPress={() => this.buttonClick()}\r\n            underlayColor={\"transparent\"}\r\n          >\r\n            <View style={styles.button}>\r\n              <Text style={styles.buttonTitle}>log in</Text>\r\n            </View>\r\n          </TouchableHighlight>\r\n        </View>\r\n\r\n        <View style={styles.etcTitle}>\r\n          <Text\r\n            style={styles.etc}\r\n            onPress={() => this.props.navigation.navigate(\"IDScreen\")}\r\n          >\r\n            아이디찾기{\" \"}\r\n          </Text>\r\n          <Text\r\n            style={styles.etc}\r\n            onPress={() => this.props.navigation.navigate(\"PWScreen\")}\r\n          >\r\n            {\" \"}\r\n            | {\"  \"}비밀번호찾기{\"  \"}\r\n          </Text>\r\n          <Text\r\n            style={styles.etc}\r\n            onPress={() => this.props.navigation.navigate(\"SignupScreen\")}\r\n          >\r\n            | {\"  \"}회원가입\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"dodgerblue\",\r\n    padding: 8,\r\n  },\r\n  title: {\r\n    fontSize: 55,\r\n    fontWeight: \"900\", //android에도 적용할려면 bold로 바꿔야 함\r\n    textAlign: \"center\",\r\n    color: \"gold\",\r\n    marginRight: 10,\r\n  },\r\n  iconContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingLeft: 90,\r\n  },\r\n  id: {\r\n    backgroundColor: \"white\",\r\n    marginTop: 20,\r\n    borderRadius: 8,\r\n  },\r\n  pw: {\r\n    backgroundColor: \"white\",\r\n    marginTop: 10,\r\n    borderRadius: 8,\r\n  },\r\n  idPw: {\r\n    height: 45,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    paddingLeft: 15,\r\n  },\r\n  button: {\r\n    backgroundColor: \"gold\",\r\n    padding: 10,\r\n    borderRadius: 8,\r\n  },\r\n  buttonTitle: {\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    color: \"midnightblue\",\r\n    textAlign: \"center\",\r\n  },\r\n  etcTitle: {\r\n    flexDirection: \"row\",\r\n    paddingTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  etc: {\r\n    color: \"midnightblue\", //navy or midnightblue\r\n    fontSize: 15,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}