{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"/Users/dahyun/My_Keyword_Notification/app-front/app/components/Input.js\";\n\nimport React, { useState, forwardRef } from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\nvar Container = styled.View(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  flex-direction: column;\\n  width: 100%;\\n  margin: 10px 0;\\n\"])));\nvar Label = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 14px;\\n  font-weight: 600;\\n  margin-bottom: 6px;\\n  color: #a6a6a6;\\n\"])));\nvar StyledTextInput = styled.TextInput.attrs(function (_ref) {\n  var theme = _ref.theme;\n  return {\n    placeholderTextColor: theme.inputPlaceholder\n  };\n})(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  background-color:  #ffffff;\\n  color:  #000000;\\n  padding: 20px 10px;\\n  font-size: 16px;\\n  border: 1px solid;\\n  border-radius: 4px;\\n\"])));\nvar Input = forwardRef(function (_ref2, ref) {\n  var label = _ref2.label,\n      value = _ref2.value,\n      onChangeText = _ref2.onChangeText,\n      onSubmitEditing = _ref2.onSubmitEditing,\n      _onBlur = _ref2.onBlur,\n      placeholder = _ref2.placeholder,\n      isPassword = _ref2.isPassword,\n      returnKeyType = _ref2.returnKeyType,\n      maxLength = _ref2.maxLength;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFocused = _useState2[0],\n      setIsFocused = _useState2[1];\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Label, {\n    isFocused: isFocused,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, label), React.createElement(StyledTextInput, {\n    ref: ref,\n    isFocused: isFocused,\n    value: value,\n    onChangeText: onChangeText,\n    onSubmitEditing: onSubmitEditing,\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      setIsFocused(false);\n\n      _onBlur();\n    },\n    placeholder: placeholder,\n    secureTextEntry: isPassword,\n    returnKeyType: returnKeyType,\n    maxLength: maxLength,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    textContentType: \"none\",\n    underlineColorAndroid: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n});\nInput.defaultProps = {\n  onBlur: function onBlur() {}\n};\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChangeText: PropTypes.func,\n  onSubmitEditing: PropTypes.func,\n  onBlur: PropTypes.func,\n  placeholder: PropTypes.string,\n  isPassword: PropTypes.bool,\n  returnKeyType: PropTypes.oneOf(['done', 'next']),\n  maxLength: PropTypes.number\n};\nexport default Input;","map":{"version":3,"sources":["/Users/dahyun/My_Keyword_Notification/app-front/app/components/Input.js"],"names":["React","useState","forwardRef","styled","PropTypes","Container","View","Label","Text","StyledTextInput","TextInput","attrs","theme","placeholderTextColor","inputPlaceholder","Input","ref","label","value","onChangeText","onSubmitEditing","onBlur","placeholder","isPassword","returnKeyType","maxLength","isFocused","setIsFocused","defaultProps","propTypes","string","isRequired","func","bool","oneOf","number"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.View`\n  flex-direction: column;\n  width: 100%;\n  margin: 10px 0;\n`;\nconst Label = styled.Text`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 6px;\n  color: #a6a6a6;\n`;\nconst StyledTextInput = styled.TextInput.attrs(({ theme }) => ({\n  placeholderTextColor: theme.inputPlaceholder,\n}))`\n  background-color:  #ffffff;\n  color:  #000000;\n  padding: 20px 10px;\n  font-size: 16px;\n  border: 1px solid;\n  border-radius: 4px;\n`;\n\nconst Input = forwardRef(\n  (\n    {\n      label,\n      value,\n      onChangeText,\n      onSubmitEditing,\n      onBlur,\n      placeholder,\n      isPassword,\n      returnKeyType,\n      maxLength,\n    },\n    ref\n  ) => {\n    const [isFocused, setIsFocused] = useState(false);\n\n    return (\n      <Container>\n        <Label isFocused={isFocused}>{label}</Label>\n        <StyledTextInput\n          ref={ref}\n          isFocused={isFocused}\n          value={value}\n          onChangeText={onChangeText}\n          onSubmitEditing={onSubmitEditing}\n          onFocus={() => setIsFocused(true)}\n          onBlur={() => {\n            setIsFocused(false);\n            onBlur();\n          }}\n          placeholder={placeholder}\n          secureTextEntry={isPassword}\n          returnKeyType={returnKeyType}\n          maxLength={maxLength}\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          textContentType=\"none\" // iOS only\n          underlineColorAndroid=\"transparent\" // Android only\n        />\n      </Container>\n    );\n  }\n);\n\nInput.defaultProps = {\n  onBlur: () => {},\n};\n\nInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChangeText: PropTypes.func,\n  onSubmitEditing: PropTypes.func,\n  onBlur: PropTypes.func,\n  placeholder: PropTypes.string,\n  isPassword: PropTypes.bool,\n  returnKeyType: PropTypes.oneOf(['done', 'next']),\n  maxLength: PropTypes.number,\n};\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}