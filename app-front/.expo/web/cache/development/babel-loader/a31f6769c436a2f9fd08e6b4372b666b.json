{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/dahyun/My_Keyword_Notification/app-front/app/components/Button.js\";\n\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\nvar TRANSPARENT = 'transparent';\nvar Container = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: #3679fe;\\n  align-items: center;\\n  border-radius: 4px;\\n  width: 100%;\\n  padding: 10px;\\n  marginTop: 20px;\\n  opacity: \", \"; //\\uBC84\\uD2BC \\uD074\\uB9AD \\uAC00\\uB2A5 \\uC5EC\\uBD80,button\\uC5D0\\uC11C props\\uB97C \\uD1B5\\uD574 \\uC804\\uB2EC\\uB418\\uB294 disabled \\uAC12\\uC5D0 \\uB530\\uB77C \\uBC84\\uD2BC \\uC2A4\\uD0C0\\uC77C \\uBCC0\\uACBD\\n\"])), function (_ref) {\n  var disabled = _ref.disabled;\n  return disabled ? 0.5 : 1;\n});\nvar Title = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  height: 30px;\\n  line-height: 30px;\\n  font-size: 16px;\\n  color: #ffffff;\\n\"])));\n\nvar Button = function Button(_ref2) {\n  var containerStyle = _ref2.containerStyle,\n      title = _ref2.title,\n      onPress = _ref2.onPress,\n      isFilled = _ref2.isFilled;\n  return React.createElement(Container, {\n    style: containerStyle,\n    onPress: onPress,\n    isFilled: isFilled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    isFilled: isFilled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nButton.defaultProps = {\n  isFilled: true\n};\nButton.propTypes = {\n  containerStyle: PropTypes.object,\n  title: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n  isFilled: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default Button;","map":{"version":3,"sources":["/Users/dahyun/My_Keyword_Notification/app-front/app/components/Button.js"],"names":["React","styled","PropTypes","TRANSPARENT","Container","TouchableOpacity","disabled","Title","Text","Button","containerStyle","title","onPress","isFilled","defaultProps","propTypes","object","string","func","isRequired","bool"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,WAAW,GAAG,aAApB;AAEA,IAAMC,SAAS,GAAGH,MAAM,CAACI,gBAAV,6aAOF;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAmBA,QAAQ,GAAG,GAAH,GAAS,CAApC;AAAA,CAPE,CAAf;AASA,IAAMC,KAAK,GAAGN,MAAM,CAACO,IAAV,4JAAX;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,QAAkD;AAAA,MAA/CC,cAA+C,SAA/CA,cAA+C;AAAA,MAA/BC,KAA+B,SAA/BA,KAA+B;AAAA,MAAxBC,OAAwB,SAAxBA,OAAwB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAC/D,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,cADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BF,KAA5B,CANF,CADF;AAUD,CAXD;;AAaAF,MAAM,CAACK,YAAP,GAAsB;AACpBD,EAAAA,QAAQ,EAAE;AADU,CAAtB;AAIAJ,MAAM,CAACM,SAAP,GAAmB;AACjBL,EAAAA,cAAc,EAAER,SAAS,CAACc,MADT;AAEjBL,EAAAA,KAAK,EAAET,SAAS,CAACe,MAFA;AAGjBL,EAAAA,OAAO,EAAEV,SAAS,CAACgB,IAAV,CAAeC,UAHP;AAIjBN,EAAAA,QAAQ,EAAEX,SAAS,CAACkB,IAJH;AAKjBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACkB;AALH,CAAnB;AAQA,eAAeX,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\n\nconst TRANSPARENT = 'transparent';\n\nconst Container = styled.TouchableOpacity`\n  background-color: #3679fe;\n  align-items: center;\n  border-radius: 4px;\n  width: 100%;\n  padding: 10px;\n  marginTop: 20px;\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)}; //버튼 클릭 가능 여부,button에서 props를 통해 전달되는 disabled 값에 따라 버튼 스타일 변경\n`;\nconst Title = styled.Text`\n  height: 30px;\n  line-height: 30px;\n  font-size: 16px;\n  color: #ffffff;\n`;\n\nconst Button = ({ containerStyle, title, onPress, isFilled }) => {\n  return (\n    <Container\n      style={containerStyle}\n      onPress={onPress}\n      isFilled={isFilled}\n      //disabled={disabled}\n    >\n      <Title isFilled={isFilled}>{title}</Title>\n    </Container>\n  );\n};\n\nButton.defaultProps = {\n  isFilled: true,\n};\n\nButton.propTypes = {\n  containerStyle: PropTypes.object,\n  title: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n  isFilled: PropTypes.bool,\n  disabled: PropTypes.bool, //버튼 동작 여부 시각화\n};\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}