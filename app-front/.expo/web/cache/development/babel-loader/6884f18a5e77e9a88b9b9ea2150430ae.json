{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/dahyun/My_Keyword_Notification/app-front/src/components/Button.js\";\n\nimport React from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\nvar TRANSPARENT = 'transparent';\nvar Container = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  align-items: center;\\n  border-radius: 4px;\\n  width: 100%;\\n  padding: 10px;\\n  opacity: \", \"; //\\uBC84\\uD2BC \\uD074\\uB9AD \\uAC00\\uB2A5 \\uC5EC\\uBD80,button\\uC5D0\\uC11C props\\uB97C \\uD1B5\\uD574 \\uC804\\uB2EC\\uB418\\uB294 disabled \\uAC12\\uC5D0 \\uB530\\uB77C \\uBC84\\uD2BC \\uC2A4\\uD0C0\\uC77C \\uBCC0\\uACBD\\n\"])), function (_ref) {\n  var theme = _ref.theme,\n      isFilled = _ref.isFilled;\n  return isFilled ? theme.buttonBackground : TRANSPARENT;\n}, function (_ref2) {\n  var disabled = _ref2.disabled;\n  return disabled ? 0.5 : 1;\n});\nvar Title = styled.Text(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  height: 30px;\\n  line-height: 30px;\\n  font-size: 16px;\\n  color: \", \";\\n\"])), function (_ref3) {\n  var theme = _ref3.theme,\n      isFilled = _ref3.isFilled;\n  return isFilled ? theme.buttonTitle : theme.buttonUnfilledTitle;\n});\n\nvar Button = function Button(_ref4) {\n  var containerStyle = _ref4.containerStyle,\n      title = _ref4.title,\n      onPress = _ref4.onPress,\n      isFilled = _ref4.isFilled;\n  return React.createElement(Container, {\n    style: containerStyle,\n    onPress: onPress,\n    isFilled: isFilled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    isFilled: isFilled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nButton.defaultProps = {\n  isFilled: true\n};\nButton.propTypes = {\n  containerStyle: PropTypes.object,\n  title: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n  isFilled: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport default Button;","map":{"version":3,"sources":["/Users/dahyun/My_Keyword_Notification/app-front/src/components/Button.js"],"names":["React","styled","PropTypes","TRANSPARENT","Container","TouchableOpacity","theme","isFilled","buttonBackground","disabled","Title","Text","buttonTitle","buttonUnfilledTitle","Button","containerStyle","title","onPress","defaultProps","propTypes","object","string","func","isRequired","bool"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,WAAW,GAAG,aAApB;AAEA,IAAMC,SAAS,GAAGH,MAAM,CAACI,gBAAV,sZACO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,QAAV,QAAUA,QAAV;AAAA,SAClBA,QAAQ,GAAGD,KAAK,CAACE,gBAAT,GAA4BL,WADlB;AAAA,CADP,EAOF;AAAA,MAAGM,QAAH,SAAGA,QAAH;AAAA,SAAmBA,QAAQ,GAAG,GAAH,GAAS,CAApC;AAAA,CAPE,CAAf;AASA,IAAMC,KAAK,GAAGT,MAAM,CAACU,IAAV,0JAIA;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,MAAUC,QAAV,SAAUA,QAAV;AAAA,SACPA,QAAQ,GAAGD,KAAK,CAACM,WAAT,GAAuBN,KAAK,CAACO,mBAD9B;AAAA,CAJA,CAAX;;AAQA,IAAMC,MAAM,GAAG,SAATA,MAAS,QAAkD;AAAA,MAA/CC,cAA+C,SAA/CA,cAA+C;AAAA,MAA/BC,KAA+B,SAA/BA,KAA+B;AAAA,MAAxBC,OAAwB,SAAxBA,OAAwB;AAAA,MAAfV,QAAe,SAAfA,QAAe;AAC/D,SACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEQ,cADT;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,QAAQ,EAAEV,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEA,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BS,KAA5B,CANF,CADF;AAUD,CAXD;;AAaAF,MAAM,CAACI,YAAP,GAAsB;AACpBX,EAAAA,QAAQ,EAAE;AADU,CAAtB;AAIAO,MAAM,CAACK,SAAP,GAAmB;AACjBJ,EAAAA,cAAc,EAAEb,SAAS,CAACkB,MADT;AAEjBJ,EAAAA,KAAK,EAAEd,SAAS,CAACmB,MAFA;AAGjBJ,EAAAA,OAAO,EAAEf,SAAS,CAACoB,IAAV,CAAeC,UAHP;AAIjBhB,EAAAA,QAAQ,EAAEL,SAAS,CAACsB,IAJH;AAKjBf,EAAAA,QAAQ,EAAEP,SAAS,CAACsB;AALH,CAAnB;AAQA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport PropTypes from 'prop-types';\n\nconst TRANSPARENT = 'transparent';\n\nconst Container = styled.TouchableOpacity`\n  background-color: ${({ theme, isFilled }) =>\n    isFilled ? theme.buttonBackground : TRANSPARENT};\n  align-items: center;\n  border-radius: 4px;\n  width: 100%;\n  padding: 10px;\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)}; //버튼 클릭 가능 여부,button에서 props를 통해 전달되는 disabled 값에 따라 버튼 스타일 변경\n`;\nconst Title = styled.Text`\n  height: 30px;\n  line-height: 30px;\n  font-size: 16px;\n  color: ${({ theme, isFilled }) =>\n    isFilled ? theme.buttonTitle : theme.buttonUnfilledTitle};\n`;\n\nconst Button = ({ containerStyle, title, onPress, isFilled }) => {\n  return (\n    <Container\n      style={containerStyle}\n      onPress={onPress}\n      isFilled={isFilled}\n      //disabled={disabled}\n    >\n      <Title isFilled={isFilled}>{title}</Title>\n    </Container>\n  );\n};\n\nButton.defaultProps = {\n  isFilled: true,\n};\n\nButton.propTypes = {\n  containerStyle: PropTypes.object,\n  title: PropTypes.string,\n  onPress: PropTypes.func.isRequired,\n  isFilled: PropTypes.bool,\n  disabled: PropTypes.bool, //버튼 동작 여부 시각화\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}